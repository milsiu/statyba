plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'idea'
}

group = 'com.eshop'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_17


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

springBoot {
    mainClass = "com.eshop.statyba.StatybaApplication"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.5'


    runtimeOnly 'org.postgresql:postgresql:42.5.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.5'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.security:spring-security-core:5.7.3'
    implementation 'org.hibernate:hibernate-core:6.1.5.Final'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-parent:2.7.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.5'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.5'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.4'
    // https://mvnrepository.com/artifact/net.imagej/ij
    implementation 'net.imagej:ij:1.53u'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

//lombok dependencies
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    //functional programming dependency
    implementation('io.vavr:vavr:0.10.4')

    //for live reload
    developmentOnly('org.springframework.boot:spring-boot-devtools:2.7.5')


}


tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    jvmArgs([
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.net=ALL-UNNAMED',
            '--add-opens', 'java.management/java.lang.management=ALL-UNNAMED',
    ])
}

//sourceSets {
//    main {
//        compileClasspath += sourceSets.generated.output
//        runtimeClasspath += sourceSets.generated.output
//    }
//
//    test {
//        compileClasspath += sourceSets.generated.output
//        runtimeClasspath += sourceSets.generated.output
//    }
//}




